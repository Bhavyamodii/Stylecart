{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\OneDrive\\\\Desktop\\\\Project3\\\\frontend\\\\src\\\\Components\\\\AddToCart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './AddToCart.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddToCart() {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [totalPrice, setTotalPrice] = useState(0); // State for total price\n  const [shippingCharge] = useState(5);\n  const [tax] = useState(0.02);\n  const userId = sessionStorage.getItem(\"userId\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (!userId) {\n          setError(\"Please login first\");\n          return;\n        }\n        const data = {\n          userId\n        };\n        const response = await axios.post(\"http://localhost:8009/api/cartList\", data);\n        console.log(\"Response from server:\", response.data); // Log response from server for debugging\n\n        if (response.data.status) {\n          setCart(response.data.result); // Update cart state with fetched data\n          setError(\"\"); // Clear error if data is successfully fetched\n        } else {\n          setError(\"Failed to fetch cart data from server.\");\n        }\n      } catch (err) {\n        console.error(\"Error fetching cart data:\", err);\n        setError(\"Failed to fetch cart data. Please try again later.\");\n      }\n    };\n    fetchData();\n  }, [userId]);\n\n  // Function to calculate total price\n  const calculateTotalPrice = () => {\n    let total = 0;\n    cart.forEach(item => {\n      total += item.productId.price * item.quantity + 5;\n    });\n    total += shippingCharge;\n    total = total * tax;\n    setTotalPrice(total);\n  };\n  useEffect(() => {\n    calculateTotalPrice(); // Calculate total price whenever cart changes\n  }, [cart]);\n  const updateCartItem = async (action, index) => {\n    try {\n      const updatedCart = [...cart];\n      let newQuantity;\n      if (action === 'increment') {\n        newQuantity = updatedCart[index].quantity + 1;\n      } else if (action === 'decrement') {\n        newQuantity = updatedCart[index].quantity - 1;\n      }\n\n      // If the quantity is 0 or less, remove the item from the cart\n      if (newQuantity <= 0) {\n        await axios.post(\"http://localhost:8009/api/updateCart\", {\n          userId,\n          productId: updatedCart[index].productId._id,\n          quantity: newQuantity\n        });\n        updatedCart.splice(index, 1);\n      } else {\n        await axios.post(\"http://localhost:8009/api/updateCart\", {\n          userId,\n          productId: updatedCart[index].productId._id,\n          quantity: newQuantity\n        });\n        updatedCart[index].quantity = newQuantity;\n      }\n      setCart(updatedCart);\n    } catch (error) {\n      console.error(\"Error updating cart item:\", error);\n    }\n  };\n  console.log(\"Current cart:\", cart); // Log current cart state for debugging\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"cart-title\",\n      children: \"Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cart.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"cart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.productId.url,\n            alt: item.productId.title,\n            className: \"cart-item-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-item-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: item.productId.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Quantity:\", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"quantity-btn\",\n                onClick: () => updateCartItem('decrement', index),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), item.quantity, /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"quantity-btn\",\n                onClick: () => updateCartItem('increment', index),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, `${item.productId._id}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: $\", totalPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Buy Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(AddToCart, \"jrR1WRczkcpgOEzFCmLx8HZQ720=\");\n_c = AddToCart;\nexport default AddToCart;\nvar _c;\n$RefreshReg$(_c, \"AddToCart\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AddToCart","_s","cart","setCart","error","setError","totalPrice","setTotalPrice","shippingCharge","tax","userId","sessionStorage","getItem","fetchData","data","response","post","console","log","status","result","err","calculateTotalPrice","total","forEach","item","productId","price","quantity","updateCartItem","action","index","updatedCart","newQuantity","_id","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","url","alt","title","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hardik/OneDrive/Desktop/Project3/frontend/src/Components/AddToCart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './AddToCart.css'; // Import the CSS file\r\n\r\nfunction AddToCart() {\r\n  const [cart, setCart] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [totalPrice, setTotalPrice] = useState(0); // State for total price\r\n  const[shippingCharge]=useState(5)\r\n  const[tax]=useState(0.02)\r\n  const userId = sessionStorage.getItem(\"userId\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (!userId) {\r\n          setError(\"Please login first\");\r\n          return;\r\n        }\r\n\r\n        const data = { userId };\r\n        const response = await axios.post(\"http://localhost:8009/api/cartList\", data);\r\n\r\n        console.log(\"Response from server:\", response.data); // Log response from server for debugging\r\n\r\n        if (response.data.status) {\r\n          setCart(response.data.result); // Update cart state with fetched data\r\n          setError(\"\"); // Clear error if data is successfully fetched\r\n        } else {\r\n          setError(\"Failed to fetch cart data from server.\");\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching cart data:\", err);\r\n        setError(\"Failed to fetch cart data. Please try again later.\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  // Function to calculate total price\r\n  const calculateTotalPrice = () => {\r\n    let total = 0;\r\n    cart.forEach(item => {\r\n      total += item.productId.price * item.quantity + 5;\r\n    });\r\n\r\n   total+=shippingCharge;\r\n   total=total*tax\r\n    setTotalPrice(total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateTotalPrice(); // Calculate total price whenever cart changes\r\n  }, [cart]);\r\n\r\n  const updateCartItem = async (action, index) => {\r\n    try {\r\n      const updatedCart = [...cart];\r\n      let newQuantity;\r\n\r\n      if (action === 'increment') {\r\n        newQuantity = updatedCart[index].quantity + 1;\r\n      } else if (action === 'decrement') {\r\n        newQuantity = updatedCart[index].quantity - 1;\r\n      }\r\n\r\n      // If the quantity is 0 or less, remove the item from the cart\r\n      if (newQuantity <= 0) {\r\n        await axios.post(\"http://localhost:8009/api/updateCart\", {\r\n          userId,\r\n          productId: updatedCart[index].productId._id,\r\n          quantity: newQuantity\r\n        });\r\n        updatedCart.splice(index, 1);\r\n      } else {\r\n        await axios.post(\"http://localhost:8009/api/updateCart\", {\r\n          userId,\r\n          productId: updatedCart[index].productId._id,\r\n          quantity: newQuantity\r\n        });\r\n        updatedCart[index].quantity = newQuantity;\r\n      }\r\n\r\n      setCart(updatedCart);\r\n    } catch (error) {\r\n      console.error(\"Error updating cart item:\", error);\r\n    }\r\n  };\r\n\r\n  console.log(\"Current cart:\", cart); // Log current cart state for debugging\r\n\r\n  return (\r\n    <div className=\"cart-wrapper\">\r\n      <h1 className=\"cart-title\">Shopping Cart</h1>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <div className=\"cart-container\">\r\n        <ul>\r\n          {cart.map((item, index) => (\r\n            <li key={`${item.productId._id}-${index}`} className=\"cart-item\">\r\n              <img src={item.productId.url} alt={item.productId.title} className=\"cart-item-image\" />\r\n              <div className=\"cart-item-details\">\r\n                <h2>{item.productId.title}</h2>\r\n                <p>Quantity:\r\n                  <button className=\"quantity-btn\" onClick={() => updateCartItem('decrement', index)}>-</button>\r\n                  {item.quantity}\r\n                  <button className=\"quantity-btn\" onClick={() => updateCartItem('increment', index)}>+</button>\r\n                </p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p>Total Price: ${totalPrice}</p> {/* Display total price */}\r\n        <button> Buy Now</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddToCart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}